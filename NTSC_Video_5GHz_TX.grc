options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: Custom
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: top_block
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: run
    sizing_mode: fixed
    thread_safe_setters: ''
    title: ''
    window_size: 3000, 3000
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: bandwidth
  id: variable
  parameters:
    comment: ''
    value: 2e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 224.0]
    rotation: 0
    state: enabled
- name: frequency_carrier
  id: variable
  parameters:
    comment: ''
    value: 5760e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 152.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: 2 * bandwidth
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 80.0]
    rotation: 0
    state: enabled
- name: NTSC_Constants
  id: epy_module
  parameters:
    alias: ''
    comment: ''
    source_code: "Line = 0\r\n\r\n# NTSC SIGNAL TIMING (in sec.)\r\nHORIZONTAL_SYNC_DURATION\
      \ = 4.7 * 0.000001\r\nBACK_PORCH_DURATION  = 4.7  * 0.000001\r\n#define VIDEO_DURATION\
      \ 52.6  * 0.000001\r\n#define FRONT_PORCH_DURATION 1.5 * 0.000001\r\n#define\
      \ LINE_DURATION 63.5 * 0.000001\r\n\r\n\r\n\r\n# NTSC SIGNAL LEVELS ---------------------*/\r\
      \nBLACK_LEVEL = -0.02\r\nWHITE_LEVEL = 0.06\r\nHORIZONTAL_SYNC_THRESHOLD = -0.020\r\
      \nHORIZONTAL_SYNC_LEVEL = -0.04\r\nBACK_PORCH_LEVEL = -0.015\r\nFRONT_PORCH_LEVEL\
      \ = -0.015\r\nEQUALISING_LEVEL = -0.015\r\nVERTICAL_SYNC_LEVEL = -0.04\r\n\r\
      \n\r\n\r\n#NTSC LINES FEATURES -------------------*/\r\n#define NBR_VIDEO_LINES\
      \ 240\r\n#define NBR_EQUALISING_LINES 3\r\n#define NBR_VERTICAL_SYNC_LINES 21\r\
      \n#define X_WIDTH 360\r\n#define Y_HEIGHT 240\r\n\r\n\r\n\r\n# NTSC SIGNAL STATES\
      \ -------------------*/\r\n#define IDLE 1\r\n#define LINES_TRANSMISSION 2\r\n\
      #define FRONT_PORCH 3\r\n#define HORIZONTAL_SYNC 4\r\n#define BACK_PORCH 5\r\
      \n#define VIDEO 6\r\n#define VERTICAL_SYNC 7\r\n#define EQUALISING 8\r\n#define\
      \ SERRATION 9\r\n#define BLANKING 10\r\n#define EVEN 1\r\n#define ODD 0\r\n\
      # this module will be imported in the into your flowgraph"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [400, 264.0]
    rotation: 0
    state: disabled
- name: NTSC_transmitter_c_0
  id: NTSC_transmitter_c
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [216, 188]
    rotation: 0
    state: disabled
- name: analog_sig_source_x_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '1'
    comment: ''
    freq: frequency_carrier
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    phase: '0'
    samp_rate: samp_rate
    type: float
    waveform: analog.GR_COS_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 480.0]
    rotation: 0
    state: true
- name: blocks_multiply_xx_0
  id: blocks_multiply_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [448, 368.0]
    rotation: 0
    state: true
- name: blocks_null_source_0
  id: blocks_null_source
  parameters:
    affinity: ''
    alias: ''
    bus_structure_source: '[[0,],]'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_outputs: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [584, 128]
    rotation: 0
    state: disabled
- name: blocks_throttle_0_0_1
  id: blocks_throttle
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    ignoretag: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    samples_per_second: samp_rate
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [416, 188]
    rotation: 0
    state: disabled
- name: blocks_vco_c_0_1
  id: blocks_vco_c
  parameters:
    affinity: ''
    alias: ''
    amplitude: '1'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    sensitivity: 200e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [568, 172]
    rotation: 0
    state: disabled
- name: epy_block_0
  id: epy_block
  parameters:
    OutputDirectory: '"Users\Chris\Documents\ECE1270"'
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nfrom moviepy.editor import VideoFileClip\nimport moviepy\n\
      import skimage\nimport numpy as np\nimport os\n\n\nclass blk(gr.sync_block):\
      \  # other base classes are basic_block, decim_block, interp_block\n    \"\"\
      \"Embedded Python Block example - a simple multiply const\"\"\"\n\n    def __init__(self,\
      \ filename = \"\", OutputDirectory = \"\"):  # only default arguments here\n\
      \        \"\"\"arguments to this function show up as parameters in GRC\"\"\"\
      \n        gr.sync_block.__init__(\n            self,\n            name='Embedded\
      \ Python Block',   # will show up in GRC\n            in_sig=[],\n         \
      \   out_sig=[np.float32]\n        )\n        # if an attribute with the same\
      \ name as a parameter is found,\n        # a callback is registered (properties\
      \ work, too).\n        self.filename = filename\n        self.OutputDirectory\
      \ = OutputDirectory\n        self.Line = 1\n        self.opened = 0\n      \
      \  self.outvect = np.empty(0)\n\n\n    def work(self, input_items, output_items):\n\
      \n\n\n        if os.listdir(\"frames\") == []:\n            vid = VideoFileClip(\"\
      Snapchat-2027161104.mp4\")\n\n            # Convert to greyscale\n         \
      \   vid = moviepy.video.fx.all.blackwhite(vid)\n            vid = vid.resize((720,486))\n\
      \n            # extract sound and save to wav\n            sound = vid.audio\n\
      \            sound.write_audiofile('audioout.mp3')\n            TestFiles =\
      \ np.empty([0], dtype='U50')\n\n            frames = 0\n\n            # Clear\
      \ directory\n            dir = 'frames'\n            for file in os.scandir(dir):\n\
      \                os.remove(file.path)\n\n            # Extract frames and convert\
      \ to array\n            for i in range(0, int(vid.duration * 30), 1):\n    \
      \            framename = \"frames/frame\" + str(i) + \".jpeg\"\n           \
      \     TestFiles.resize(TestFiles.size + 1)\n                TestFiles[TestFiles.size\
      \ - 1] = framename\n                vid.save_frame(framename, float((i * vid.duration)\
      \ / 30))\n\n                if (i == 0):\n                    vidvect = skimage.io.imread(TestFiles[0],\
      \ as_gray=True).ravel()\n                else:\n                    vidvect\
      \ = np.append(vidvect, skimage.io.imread(TestFiles[i], as_gray=True).ravel())\n\
      \                frames = frames + 1\n\n            firstrun = 0\n        if\
      \ self.opened == 0:\n            self.opened = 1\n            i = 0\n      \
      \      #FIX ORDER FILES ARE OPENED THEY ARE OPENING ALPHABETICALLY\n       \
      \     for file in os.listdir(\"frames\"):\n                filename = \"frames/\"\
      \ + file\n                if (i == 0):\n                    print(i)\n     \
      \               vidvect = skimage.io.imread(filename, as_gray=True).ravel()\n\
      \                    i = 1\n                else:\n                    print(file)\n\
      \                    vidvect = np.append(vidvect, skimage.io.imread(filename,\
      \ as_gray=True).ravel())\n            self.outvect.resize(vidvect.size)\n  \
      \          self.outvect = vidvect\n            self.outvect = np.reshape(self.outvect,(-1,\
      \ 720))\n            print(self.outvect.shape)\n        print(output_items[0])\n\
      \        if output_items[0].size > self.outvect.shape[1]:\n            for k\
      \ in range(self.outvect.shape[1]):\n                output_items[0][k] = self.outvect[self.Line,\
      \ k]\n\n        self.Line = self.Line + 1\n        #\n        # if Line < vidvect.shape[0]\
      \ - 1:\n        #     Line = Line + 1\n        # else:\n        #      Line\
      \ = 0\n        return len(output_items[0])\n\n\n\n\n"
    affinity: ''
    alias: ''
    comment: ''
    filename: '"Users\Chris\Documents\ECE1270\Snapchat-2027161104.mp4"'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Embedded Python Block', 'blk', [('filename', "''"), ('OutputDirectory',
      "''")], [], [('0', 'float', 1)], 'Embedded Python Block example - a simple multiply
      const', ['OutputDirectory', 'filename'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [192, 392.0]
    rotation: 0
    state: enabled
- name: epy_module_0
  id: epy_module
  parameters:
    alias: ''
    comment: ''
    source_code: '# this module will be imported in the into your flowgraph'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 488.0]
    rotation: 0
    state: true
- name: iio_pluto_sink_0
  id: iio_pluto_sink
  parameters:
    affinity: ''
    alias: ''
    attenuation1: '10.0'
    bandwidth: '20000000'
    buffer_size: '32768'
    comment: ''
    cyclic: 'False'
    filter: ''
    filter_source: '''Auto'''
    fpass: '0'
    frequency: '2400000000'
    fstop: '0'
    len_tag_key: ''
    samplerate: samp_rate
    type: fc32
    uri: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [680, 384.0]
    rotation: 0
    state: disabled
- name: import_0_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import moviepy
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 312.0]
    rotation: 0
    state: true
- name: import_0_0_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import numpy
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 376.0]
    rotation: 0
    state: true
- name: import_0_0_0_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import scipy
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 432.0]
    rotation: 0
    state: true
- name: import_0_0_1
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import skimage
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [136, 312.0]
    rotation: 0
    state: true
- name: note_0
  id: note
  parameters:
    alias: ''
    comment: ''
    note: Install Moviepy,scikit-image and other modules through CONDA prompt
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [168, 8.0]
    rotation: 0
    state: true
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '2000'
    srate: int(2e3)
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '0'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [440, 480.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_1
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: float
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [560, 280.0]
    rotation: 0
    state: true
- name: uhd_usrp_sink_0_0
  id: uhd_usrp_sink
  parameters:
    affinity: ''
    alias: ''
    ant0: TX/RX
    ant1: TX/RX
    ant10: ''
    ant11: ''
    ant12: ''
    ant13: ''
    ant14: ''
    ant15: ''
    ant16: ''
    ant17: ''
    ant18: ''
    ant19: ''
    ant2: ''
    ant20: ''
    ant21: ''
    ant22: ''
    ant23: ''
    ant24: ''
    ant25: ''
    ant26: ''
    ant27: ''
    ant28: ''
    ant29: ''
    ant3: ''
    ant30: ''
    ant31: ''
    ant4: ''
    ant5: ''
    ant6: ''
    ant7: ''
    ant8: ''
    ant9: ''
    bw0: '0'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    center_freq0: frequency_carrier
    center_freq1: frequency_carrier
    center_freq10: '0'
    center_freq11: '0'
    center_freq12: '0'
    center_freq13: '0'
    center_freq14: '0'
    center_freq15: '0'
    center_freq16: '0'
    center_freq17: '0'
    center_freq18: '0'
    center_freq19: '0'
    center_freq2: '0'
    center_freq20: '0'
    center_freq21: '0'
    center_freq22: '0'
    center_freq23: '0'
    center_freq24: '0'
    center_freq25: '0'
    center_freq26: '0'
    center_freq27: '0'
    center_freq28: '0'
    center_freq29: '0'
    center_freq3: '0'
    center_freq30: '0'
    center_freq31: '0'
    center_freq4: '0'
    center_freq5: '0'
    center_freq6: '0'
    center_freq7: '0'
    center_freq8: '0'
    center_freq9: '0'
    clock_rate: '0.0'
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    dev_addr: '""'
    dev_args: '""'
    gain0: '1000'
    gain1: '1000'
    gain10: '0'
    gain11: '0'
    gain12: '0'
    gain13: '0'
    gain14: '0'
    gain15: '0'
    gain16: '0'
    gain17: '0'
    gain18: '0'
    gain19: '0'
    gain2: '0'
    gain20: '0'
    gain21: '0'
    gain22: '0'
    gain23: '0'
    gain24: '0'
    gain25: '0'
    gain26: '0'
    gain27: '0'
    gain28: '0'
    gain29: '0'
    gain3: '0'
    gain30: '0'
    gain31: '0'
    gain4: '0'
    gain5: '0'
    gain6: '0'
    gain7: '0'
    gain8: '0'
    gain9: '0'
    gain_type0: default
    gain_type1: default
    gain_type10: default
    gain_type11: default
    gain_type12: default
    gain_type13: default
    gain_type14: default
    gain_type15: default
    gain_type16: default
    gain_type17: default
    gain_type18: default
    gain_type19: default
    gain_type2: default
    gain_type20: default
    gain_type21: default
    gain_type22: default
    gain_type23: default
    gain_type24: default
    gain_type25: default
    gain_type26: default
    gain_type27: default
    gain_type28: default
    gain_type29: default
    gain_type3: default
    gain_type30: default
    gain_type31: default
    gain_type4: default
    gain_type5: default
    gain_type6: default
    gain_type7: default
    gain_type8: default
    gain_type9: default
    len_tag_name: ''
    lo_export0: 'False'
    lo_export1: 'False'
    lo_export10: 'False'
    lo_export11: 'False'
    lo_export12: 'False'
    lo_export13: 'False'
    lo_export14: 'False'
    lo_export15: 'False'
    lo_export16: 'False'
    lo_export17: 'False'
    lo_export18: 'False'
    lo_export19: 'False'
    lo_export2: 'False'
    lo_export20: 'False'
    lo_export21: 'False'
    lo_export22: 'False'
    lo_export23: 'False'
    lo_export24: 'False'
    lo_export25: 'False'
    lo_export26: 'False'
    lo_export27: 'False'
    lo_export28: 'False'
    lo_export29: 'False'
    lo_export3: 'False'
    lo_export30: 'False'
    lo_export31: 'False'
    lo_export4: 'False'
    lo_export5: 'False'
    lo_export6: 'False'
    lo_export7: 'False'
    lo_export8: 'False'
    lo_export9: 'False'
    lo_source0: internal
    lo_source1: internal
    lo_source10: internal
    lo_source11: internal
    lo_source12: internal
    lo_source13: internal
    lo_source14: internal
    lo_source15: internal
    lo_source16: internal
    lo_source17: internal
    lo_source18: internal
    lo_source19: internal
    lo_source2: internal
    lo_source20: internal
    lo_source21: internal
    lo_source22: internal
    lo_source23: internal
    lo_source24: internal
    lo_source25: internal
    lo_source26: internal
    lo_source27: internal
    lo_source28: internal
    lo_source29: internal
    lo_source3: internal
    lo_source30: internal
    lo_source31: internal
    lo_source4: internal
    lo_source5: internal
    lo_source6: internal
    lo_source7: internal
    lo_source8: internal
    lo_source9: internal
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '2'
    num_mboards: '1'
    otw: ''
    samp_rate: samp_rate
    sd_spec0: ''
    sd_spec1: ''
    sd_spec2: ''
    sd_spec3: ''
    sd_spec4: ''
    sd_spec5: ''
    sd_spec6: ''
    sd_spec7: ''
    show_lo_controls: 'False'
    start_time: '-1.0'
    stream_args: ''
    stream_chans: '[]'
    sync: sync
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [752, 108]
    rotation: 0
    state: disabled

connections:
- [NTSC_transmitter_c_0, '0', blocks_throttle_0_0_1, '0']
- [analog_sig_source_x_0, '0', blocks_multiply_xx_0, '1']
- [blocks_multiply_xx_0, '0', qtgui_time_sink_x_1, '0']
- [blocks_null_source_0, '0', uhd_usrp_sink_0_0, '0']
- [blocks_throttle_0_0_1, '0', blocks_vco_c_0_1, '0']
- [blocks_vco_c_0_1, '0', uhd_usrp_sink_0_0, '1']
- [epy_block_0, '0', blocks_multiply_xx_0, '0']
- [epy_block_0, '0', qtgui_time_sink_x_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.3.0
